<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on 🧀 - 你好</title>
    <link>yuanshuai1122.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on 🧀 - 你好</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="yuanshuai1122.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL基础（快速复习版）</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%A4%8D%E4%B9%A0%E7%89%88-mysql%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%A4%8D%E4%B9%A0%E7%89%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%A4%8D%E4%B9%A0%E7%89%88-mysql%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%A4%8D%E4%B9%A0%E7%89%88/</guid>
      <description>一、与MySQL的第一次亲密接触 1.1、数据库的相关概念 一、数据库的好处 1、可以持久化数据到本地 2、结构化查询 二、数据库的常见概念 ★ 1、DB</description>
    </item>
    
    <item>
      <title>MySQL基础之变量</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%8F%98%E9%87%8F-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%8F%98%E9%87%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%8F%98%E9%87%8F-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%8F%98%E9%87%8F/</guid>
      <description>&amp;mdash;: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-: | | 用户变量 | 当前会话 | 会话的任何地方 | 加@符号，不用指定类型 | | 局部变量 | 定义它的BEGIN END中 | BEGIN END的第一句话 | 一</description>
    </item>
    
    <item>
      <title>MySQL基础之查询（二）</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%BA%8C-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%BA%8C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%BA%8C-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%BA%8C/</guid>
      <description>&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | | 分组前筛选 | 原始表 | group by前 where | | 分组后筛选 | group by后的结果集 | group by后 having | 问题1：分组函数做筛选能不能放在where后面 答：</description>
    </item>
    
    <item>
      <title>MySQL基础之查询（一）</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%B8%80-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%B8%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%B8%80-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E4%B8%80/</guid>
      <description>SELECT * FROM employees WHERE employee_id BETWEEN 120 AND 100; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 3.in 含义：判断某字段的值是否属于in列表中的某一项 特点： ①使用i</description>
    </item>
    
    <item>
      <title>MySQL基础之常见函数</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/</guid>
      <description>常见函数 概念：类似于java的方法，将一组逻辑语句封装在方法体中，对外暴露方法名 好处：1、隐藏了实现细节 2、提高代码的重用性 调用： 1 select 函数名</description>
    </item>
    
    <item>
      <title>MySQL基础之常见约束和标识列</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%BA%A6%E6%9D%9F%E5%92%8C%E6%A0%87%E8%AF%86%E5%88%97-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%BA%A6%E6%9D%9F%E5%92%8C%E6%A0%87%E8%AF%86%E5%88%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%BA%A6%E6%9D%9F%E5%92%8C%E6%A0%87%E8%AF%86%E5%88%97-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%BA%A6%E6%9D%9F%E5%92%8C%E6%A0%87%E8%AF%86%E5%88%97/</guid>
      <description>&amp;mdash;&amp;ndash;: | :&amp;mdash;&amp;mdash;&amp;mdash;-: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;: | :&amp;mdash;&amp;mdash;&amp;mdash;-: | | 主键 | √ | × | 至多有1个 | √，但不推荐 | | 唯一 | √ | √ | 可以有多个 | √，但不推荐 | 外键： 1、要求在从表设置外键关系 2、从表</description>
    </item>
    
    <item>
      <title>MySQL基础之存储过程和函数</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/</guid>
      <description>&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;</description>
    </item>
    
    <item>
      <title>MySQL基础之库和表的管理</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%BA%93%E5%92%8C%E8%A1%A8%E7%9A%84%E7%AE%A1%E7%90%86-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%BA%93%E5%92%8C%E8%A1%A8%E7%9A%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%BA%93%E5%92%8C%E8%A1%A8%E7%9A%84%E7%AE%A1%E7%90%86-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%BA%93%E5%92%8C%E8%A1%A8%E7%9A%84%E7%AE%A1%E7%90%86/</guid>
      <description>DDL（数据定义语言） 库和表的管理 一、库的管理 创建、修改、删除 二、表的管理 创建、修改、删除 创建： create 修改： alter 删除： drop 一、库的管理 1、库的创建 语</description>
    </item>
    
    <item>
      <title>MySQL基础之流程控制结构</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</guid>
      <description>流程控制结构 顺序、分支、循环 一、分支结构 1.if函数 语法： 1 if(条件,值1，值2) 功能：实现双分支 应用在begin end中或外面 2.cas</description>
    </item>
    
    <item>
      <title>MySQL基础之事务</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E4%BA%8B%E5%8A%A1-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E4%BA%8B%E5%8A%A1-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E4%BA%8B%E5%8A%A1/</guid>
      <description>&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;: | :&amp;ndash;: | :&amp;mdash;&amp;mdash;&amp;ndash;: | :&amp;ndash;: | | read uncommitted | √ | √ | √ | | read committed | × | √ | √ | | repeatable read | × | × | √ | | serializable | × | × | × | mysql中默认 第三个隔离级别 repeatable read oracle</description>
    </item>
    
    <item>
      <title>MySQL基础之视图</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E8%A7%86%E5%9B%BE-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E8%A7%86%E5%9B%BE-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E8%A7%86%E5%9B%BE/</guid>
      <description>| &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | | 视图 | create view | 只是保存了sql逻辑 | 增删改查，只是一般不能增删改 | | 表 | create table | 保存了数据 | 增删改查 | 案例：查询姓张的学生名和专</description>
    </item>
    
    <item>
      <title>MySQL基础之数据的增删改</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9/</guid>
      <description>DML语言（数据操纵语言） 数据操作语言： 插入：insert 修改：update 删除：delete 一、插入语句 方式一：经典的插入 语法： 1 2 insert into 表</description>
    </item>
    
    <item>
      <title>MySQL基础之数据类型</title>
      <link>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-mysql%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>-: | :&amp;mdash;&amp;ndash;: | :&amp;mdash;&amp;mdash;: | :&amp;mdash;&amp;mdash;-: | :&amp;mdash;&amp;mdash;&amp;mdash;: | :&amp;mdash;-: | | 字节数 | 1 | 2 | 3 | 4 | 8 | 特点： ① 如果不设置无符号还是有符号，默认是有符号，如果想设置无符号，需要添加unsig</description>
    </item>
    
    <item>
      <title>MySQL之安装与配置（mac版）</title>
      <link>yuanshuai1122.github.io/post/mysql%E4%B9%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEmac%E7%89%88-mysql%E4%B9%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEmac%E7%89%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/mysql%E4%B9%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEmac%E7%89%88-mysql%E4%B9%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEmac%E7%89%88/</guid>
      <description>一、安装 第一步：打开MySQL官网网址，https://www.mysql.com ，点击DOWNLOAD。 第二步： 第一步结束后程序会跳转到h</description>
    </item>
    
    <item>
      <title>Redis之Java客户端Jedis</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8Bjava%E5%AE%A2%E6%88%B7%E7%AB%AFjedis-redis%E4%B9%8Bjava%E5%AE%A2%E6%88%B7%E7%AB%AFjedis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8Bjava%E5%AE%A2%E6%88%B7%E7%AB%AFjedis-redis%E4%B9%8Bjava%E5%AE%A2%E6%88%B7%E7%AB%AFjedis/</guid>
      <description>&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&amp;quot; ); jedis.mset( &amp;ldquo;str1&amp;rdquo; , &amp;ldquo;v1&amp;rdquo; , &amp;ldquo;str2&amp;rdquo; , &amp;ldquo;v2&amp;rdquo; , &amp;ldquo;str3&amp;rdquo; , &amp;ldquo;v3&amp;rdquo; ); System. out .println(jedis.mget( &amp;ldquo;str1&amp;rdquo; , &amp;ldquo;str2&amp;rdquo; , &amp;ldquo;str3&amp;rdquo; )); //list System. out .println( &amp;ldquo;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&amp;rdquo; ); //jedis.lpush(&amp;quot; mylist &amp;ldquo;,&amp;ldquo;v1&amp;rdquo;,&amp;ldquo;v2&amp;rdquo;,&amp;ldquo;v3&amp;rdquo;,&amp;ldquo;v4&amp;rdquo;,&amp;ldquo;v5&amp;rdquo;); List list = jedis.lrange( &amp;ldquo;mylist&amp;rdquo; ,0,-1); for (String element : list) { System. out .println(element); } //set jedis.sadd( &amp;ldquo;orders&amp;rdquo; , &amp;ldquo;jd001&amp;rdquo; ); jedis.sadd( &amp;ldquo;orders&amp;rdquo; , &amp;ldquo;jd002&amp;rdquo; ); jedis.sadd( &amp;ldquo;orders&amp;rdquo; , &amp;ldquo;jd003&amp;rdquo; ); Set set1 = jedis.smembers( &amp;ldquo;orders&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Redis之NoSql入门和概述</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8Bnosql%E5%85%A5%E9%97%A8%E5%92%8C%E6%A6%82%E8%BF%B0-redis%E4%B9%8Bnosql%E5%85%A5%E9%97%A8%E5%92%8C%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8Bnosql%E5%85%A5%E9%97%A8%E5%92%8C%E6%A6%82%E8%BF%B0-redis%E4%B9%8Bnosql%E5%85%A5%E9%97%A8%E5%92%8C%E6%A6%82%E8%BF%B0/</guid>
      <description>NoSql入门和概述 1、入门概述 1.1、互联网时代背景下大机遇，为什么用nosql 1.1.1、单机MySQL的美好年代 在90年代，一个网站的</description>
    </item>
    
    <item>
      <title>Redis之持久化</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8B%E6%8C%81%E4%B9%85%E5%8C%96-redis%E4%B9%8B%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8B%E6%8C%81%E4%B9%85%E5%8C%96-redis%E4%B9%8B%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>1、RDB（Redis DataBase） 1.1、是什么 在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲的Snapshot快照，它</description>
    </item>
    
    <item>
      <title>Redis之发布订阅</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8B%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85-redis%E4%B9%8B%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8B%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85-redis%E4%B9%8B%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</guid>
      <description>1、是什么 进程间的一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。 订阅/发布消息图 2、命令 3、案列 先订阅后发布 后才能收</description>
    </item>
    
    <item>
      <title>Redis之复制</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8B%E5%A4%8D%E5%88%B6-redis%E4%B9%8B%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8B%E5%A4%8D%E5%88%B6-redis%E4%B9%8B%E5%A4%8D%E5%88%B6/</guid>
      <description>1、是什么 行话：也就是我们所说的主从复制，主机数据更新后根据配置和策略，自动同步到备机的master/slaver机制，Master以写为主</description>
    </item>
    
    <item>
      <title>Redis之解析配置文件</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8B%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-redis%E4%B9%8B%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8B%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-redis%E4%B9%8B%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>解析配置文件Redis.conf 1、它在哪 1.1、地址 记得将它拷贝出来单独执行~ 2、Units单位 配置大小单位,开头定义了一些基本的度量单位</description>
    </item>
    
    <item>
      <title>Redis之入门介绍</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8B%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D-redis%E4%B9%8B%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8B%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D-redis%E4%B9%8B%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</guid>
      <description>1、入门概述 1.1、是什么 Redis:REmote DIctionary Server(远程字典服务器) 是完全开源免费的，用C语言编写的，遵守BSD协议，是一个高性能的(key/val</description>
    </item>
    
    <item>
      <title>Redis之事务</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8B%E4%BA%8B%E5%8A%A1-redis%E4%B9%8B%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8B%E4%BA%8B%E5%8A%A1-redis%E4%B9%8B%E4%BA%8B%E5%8A%A1/</guid>
      <description>1、是什么 可以一次执行多个命令，本质是一组命令的集合。一个事务中的所有命令都会序列化，按顺序地串行化执行而不会被其它命令插入，不许加塞 2、能</description>
    </item>
    
    <item>
      <title>Redis之数据类型</title>
      <link>yuanshuai1122.github.io/post/redis%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-redis%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>yuanshuai1122.github.io/post/redis%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-redis%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>当前库就没有了，被移除了 expire key 秒钟：为给定的key设置过期时间 ttl key 查看还有多少秒过期，-1表示永不过期，-2表示已过期 type key 查看你的key是什么</description>
    </item>
    
  </channel>
</rss>
