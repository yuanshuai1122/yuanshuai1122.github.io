<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Vue - 标签 - CN.yuanshuai</title>
    <link>http://yuanshuai1122.github.io/tags/vue/</link>
    <description>Vue - 标签 - CN.yuanshuai</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</lastBuildDate><atom:link href="http://yuanshuai1122.github.io/tags/vue/" rel="self" type="application/rss+xml" /><item>
  <title>Vue之const的使用及注意点</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bconst%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%B3%A8%E6%84%8F%E7%82%B9-vue%E4%B9%8Bconst%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%B3%A8%E6%84%8F%E7%82%B9/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bconst%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%B3%A8%E6%84%8F%E7%82%B9-vue%E4%B9%8Bconst%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%B3%A8%E6%84%8F%E7%82%B9/</guid>
  <description><![CDATA[1.const定义的标识符必须初始化 const a;报错：const标识符未初始化 定义并赋值： const a = 1;2.const修饰的标识符不能被修改 const a = 1; a]]></description>
</item>
<item>
  <title>Vue之ES6对象字面量增强写法</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bes6%E5%AF%B9%E8%B1%A1%E5%AD%97%E9%9D%A2%E9%87%8F%E5%A2%9E%E5%BC%BA%E5%86%99%E6%B3%95-vue%E4%B9%8Bes6%E5%AF%B9%E8%B1%A1%E5%AD%97%E9%9D%A2%E9%87%8F%E5%A2%9E%E5%BC%BA%E5%86%99%E6%B3%95/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bes6%E5%AF%B9%E8%B1%A1%E5%AD%97%E9%9D%A2%E9%87%8F%E5%A2%9E%E5%BC%BA%E5%86%99%E6%B3%95-vue%E4%B9%8Bes6%E5%AF%B9%E8%B1%A1%E5%AD%97%E9%9D%A2%E9%87%8F%E5%A2%9E%E5%BC%BA%E5%86%99%E6%B3%95/</guid>
  <description><![CDATA[1.生成对象的方法 1.利用对象构造函数 const obj = new Object();2.字面量写法 const obj = { }2.属性的增强写法 1.ES5 const name = &#39;sunny&#39;, age = 18, sex = &#39;male&#39;; const obj = { name: name,]]></description>
</item>
<item>
  <title>Vue之js的高阶函数</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bjs%E7%9A%84%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0-vue%E4%B9%8Bjs%E7%9A%84%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bjs%E7%9A%84%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0-vue%E4%B9%8Bjs%E7%9A%84%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</guid>
  <description><![CDATA[js的高阶函数（ filter()、map()、reduce() ） arr = [20,40,12,232,23,232]; 需求1：找出数组中数值低于100的元素，组成新数组并返回 需求2：对返回]]></description>
</item>
<item>
  <title>Vue之Promise</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bpromise-vue%E4%B9%8Bpromise/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bpromise-vue%E4%B9%8Bpromise/</guid>
  <description><![CDATA[Promise 一、简单介绍 在介绍Promise之前，得向大家解析几个名词 1.同步和异步 ① 同步 当用户使用js和浏览器发生交互时，执行到某一个模块时系统发现]]></description>
</item>
<item>
  <title>Vue之Router（二）</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Brouter%E4%BA%8C-vue%E4%B9%8Brouter%E4%BA%8C/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Brouter%E4%BA%8C-vue%E4%B9%8Brouter%E4%BA%8C/</guid>
  <description><![CDATA[一、动态路由 1.产生背景 为什么会有动态路由呢？因为在一般的项目中，都会涉及到用户登陆的操作，我们希望某某用户登陆某个网页的时候，能够在该网页]]></description>
</item>
<item>
  <title>Vue之Router（三）</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Brouter%E4%B8%89-vue%E4%B9%8Brouter%E4%B8%89/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Brouter%E4%B8%89-vue%E4%B9%8Brouter%E4%B8%89/</guid>
  <description><![CDATA[一、router和route的本质 1.router 前面说过，当你使用 this.$router 获取的时候其实就是获取了 router 实例。 首先在 user 页面添加一个按钮，然后通过点击这个按钮来打印]]></description>
</item>
<item>
  <title>Vue之Router（一）</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Brouter%E4%B8%80-vue%E4%B9%8Brouter%E4%B8%80/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Brouter%E4%B8%80-vue%E4%B9%8Brouter%E4%B8%80/</guid>
  <description><![CDATA[一、前景知识 （一）、基本知识 路由、转送、路由表 路由：我们仨都算是负责运输行业的，但是我只是负责运输线路的确定 路由表：为了避免“转送”送错货物]]></description>
</item>
<item>
  <title>Vue之slot插槽</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bslot%E6%8F%92%E6%A7%BD-vue%E4%B9%8Bslot%E6%8F%92%E6%A7%BD/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bslot%E6%8F%92%E6%A7%BD-vue%E4%B9%8Bslot%E6%8F%92%E6%A7%BD/</guid>
  <description><![CDATA[slot插槽 一、为什么要使用插槽 在生活中，电脑的USB接口对应不同的设备就提供不同的功能，可以接键盘、鼠标、音响、U盘…… 在组件中，slot]]></description>
</item>
<item>
  <title>Vue之Tabbar的实现</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Btabbar%E7%9A%84%E5%AE%9E%E7%8E%B0-vue%E4%B9%8Btabbar%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Btabbar%E7%9A%84%E5%AE%9E%E7%8E%B0-vue%E4%B9%8Btabbar%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
  <description><![CDATA[Tabbar实现 一、实现思路 最终的效果如下图所示，下面小编一一为大家解析每个部分如何实现，并附上最终的实现代码。 ① 路由懒加载 首先，肯定有两个]]></description>
</item>
<item>
  <title>Vue之v-model</title>
  <link>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bv-model-vue%E4%B9%8Bv-model/</link>
  <pubDate>Tue, 20 Jul 2021 18:38:23 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://yuanshuai1122.github.io/posts/vue%E4%B9%8Bv-model-vue%E4%B9%8Bv-model/</guid>
  <description><![CDATA[v-model 一、v-model是什么 v-model就是vue的双向绑定的指令，能将页面上控件输入的值同步更新到相关绑定的data属性，也会在更新dat]]></description>
</item>
</channel>
</rss>
